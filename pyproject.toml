[project]
name = "collie"
version = "0.1.0"
description = "Classful Ontology for Life-Events Information Extraction"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "David Spencer", email = "david.spencer@familysearch.org"}
]
maintainers = [
    {name = "David Spencer", email = "david.spencer@familysearch.org"}
]
keywords = [
    "ontology", "semantic-web", "data-modeling", "validation", "pydantic", "python",
    "cultural-heritage", "museums", "archives", "libraries", "information-extraction", 
    "life-events", "genealogy", "historical-data", "cidoc-crm", "iso-21127",
    "markdown", "cypher", "neo4j", "memgraph", "graph-database", "llm", "ai",
    "semantic-interoperability", "linked-data", "knowledge-graph", "developer-tools",
    "code-generation", "yaml", "json-schema", "uuid", "data-integration", "etl",
    "nlp", "text-processing", "entity-extraction", "documentation", "reporting"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Documentation",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]
dependencies = [
    "pydantic>=2.0.0",
    "pydantic-ai>=1.0.2",
    "python-dotenv>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/decisionnerd/collie"
Repository = "https://github.com/decisionnerd/collie"
Issues = "https://github.com/decisionnerd/collie/issues"

[project.scripts]
collie = "collie.main:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/collie"]

[tool.hatch.build.sources]
"src" = ""

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "ruff>=0.1.0",
]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["E501", "E203"]
unfixable = ["F401"]

[tool.ruff.lint.per-file-ignores]
"src/collie/codegen/generate_templates.py" = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
exclude = ["src/collie/codegen/generate_templates.py"]
